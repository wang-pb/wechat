package com.tkj.wechat.domain;

import java.util.ArrayList;
import java.util.List;

public class ViewClassTypePosterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        ViewClassTypePosterExample example = new ViewClassTypePosterExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public ViewClassTypePosterExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andClassTypeIdIsNull() {
            addCriterion("class_type_id is null");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdIsNotNull() {
            addCriterion("class_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdEqualTo(Integer value) {
            addCriterion("class_type_id =", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdNotEqualTo(Integer value) {
            addCriterion("class_type_id <>", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdGreaterThan(Integer value) {
            addCriterion("class_type_id >", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("class_type_id >=", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdLessThan(Integer value) {
            addCriterion("class_type_id <", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("class_type_id <=", value, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeIdIn(List<Integer> values) {
            addCriterion("class_type_id in", values, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdNotIn(List<Integer> values) {
            addCriterion("class_type_id not in", values, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("class_type_id between", value1, value2, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("class_type_id not between", value1, value2, "classTypeId");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameIsNull() {
            addCriterion("class_type_name is null");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameIsNotNull() {
            addCriterion("class_type_name is not null");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameEqualTo(String value) {
            addCriterion("class_type_name =", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameNotEqualTo(String value) {
            addCriterion("class_type_name <>", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameGreaterThan(String value) {
            addCriterion("class_type_name >", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("class_type_name >=", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameLessThan(String value) {
            addCriterion("class_type_name <", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameLessThanOrEqualTo(String value) {
            addCriterion("class_type_name <=", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("class_type_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClassTypeNameLike(String value) {
            addCriterion("class_type_name like", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameNotLike(String value) {
            addCriterion("class_type_name not like", value, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameIn(List<String> values) {
            addCriterion("class_type_name in", values, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameNotIn(List<String> values) {
            addCriterion("class_type_name not in", values, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameBetween(String value1, String value2) {
            addCriterion("class_type_name between", value1, value2, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andClassTypeNameNotBetween(String value1, String value2) {
            addCriterion("class_type_name not between", value1, value2, "classTypeName");
            return (Criteria) this;
        }

        public Criteria andPosterIdIsNull() {
            addCriterion("poster_id is null");
            return (Criteria) this;
        }

        public Criteria andPosterIdIsNotNull() {
            addCriterion("poster_id is not null");
            return (Criteria) this;
        }

        public Criteria andPosterIdEqualTo(Integer value) {
            addCriterion("poster_id =", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdNotEqualTo(Integer value) {
            addCriterion("poster_id <>", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdGreaterThan(Integer value) {
            addCriterion("poster_id >", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("poster_id >=", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdLessThan(Integer value) {
            addCriterion("poster_id <", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdLessThanOrEqualTo(Integer value) {
            addCriterion("poster_id <=", value, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("poster_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPosterIdIn(List<Integer> values) {
            addCriterion("poster_id in", values, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdNotIn(List<Integer> values) {
            addCriterion("poster_id not in", values, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdBetween(Integer value1, Integer value2) {
            addCriterion("poster_id between", value1, value2, "posterId");
            return (Criteria) this;
        }

        public Criteria andPosterIdNotBetween(Integer value1, Integer value2) {
            addCriterion("poster_id not between", value1, value2, "posterId");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("`type` like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("`type` not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNull() {
            addCriterion("`sequence` is null");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNotNull() {
            addCriterion("`sequence` is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualTo(Integer value) {
            addCriterion("`sequence` =", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualTo(Integer value) {
            addCriterion("`sequence` <>", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThan(Integer value) {
            addCriterion("`sequence` >", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualTo(Integer value) {
            addCriterion("`sequence` >=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceLessThan(Integer value) {
            addCriterion("`sequence` <", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualTo(Integer value) {
            addCriterion("`sequence` <=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("`sequence` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSequenceIn(List<Integer> values) {
            addCriterion("`sequence` in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotIn(List<Integer> values) {
            addCriterion("`sequence` not in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceBetween(Integer value1, Integer value2) {
            addCriterion("`sequence` between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotBetween(Integer value1, Integer value2) {
            addCriterion("`sequence` not between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Integer value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Integer value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Integer value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Integer value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Integer value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualToColumn(ViewClassTypePoster.Column column) {
            addCriterion(new StringBuilder("is_delete <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Integer> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Integer> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Integer value1, Integer value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Integer value1, Integer value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table view_class_type_poster
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        private ViewClassTypePosterExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        protected Criteria(ViewClassTypePosterExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        public ViewClassTypePosterExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table view_class_type_poster
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table view_class_type_poster
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table view_class_type_poster
         *
         * @mbg.generated
         */
        void example(com.tkj.wechat.domain.ViewClassTypePosterExample example);
    }
}