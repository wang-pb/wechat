package com.tkj.wechat.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AuthenticationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AuthenticationExample example = new AuthenticationExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public AuthenticationExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table authentication
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeIsNull() {
            addCriterion("authentication_type is null");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeIsNotNull() {
            addCriterion("authentication_type is not null");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeEqualTo(Integer value) {
            addCriterion("authentication_type =", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeNotEqualTo(Integer value) {
            addCriterion("authentication_type <>", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeGreaterThan(Integer value) {
            addCriterion("authentication_type >", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("authentication_type >=", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeLessThan(Integer value) {
            addCriterion("authentication_type <", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeLessThanOrEqualTo(Integer value) {
            addCriterion("authentication_type <=", value, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("authentication_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeIn(List<Integer> values) {
            addCriterion("authentication_type in", values, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeNotIn(List<Integer> values) {
            addCriterion("authentication_type not in", values, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeBetween(Integer value1, Integer value2) {
            addCriterion("authentication_type between", value1, value2, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andAuthenticationTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("authentication_type not between", value1, value2, "authenticationType");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("`state` =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("`state` <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("`state` >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("`state` >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("`state` <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("`state` <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("`state` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberIsNull() {
            addCriterion("identity_number is null");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberIsNotNull() {
            addCriterion("identity_number is not null");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberEqualTo(String value) {
            addCriterion("identity_number =", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberNotEqualTo(String value) {
            addCriterion("identity_number <>", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberGreaterThan(String value) {
            addCriterion("identity_number >", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberGreaterThanOrEqualTo(String value) {
            addCriterion("identity_number >=", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberLessThan(String value) {
            addCriterion("identity_number <", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberLessThanOrEqualTo(String value) {
            addCriterion("identity_number <=", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNumberLike(String value) {
            addCriterion("identity_number like", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberNotLike(String value) {
            addCriterion("identity_number not like", value, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberIn(List<String> values) {
            addCriterion("identity_number in", values, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberNotIn(List<String> values) {
            addCriterion("identity_number not in", values, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberBetween(String value1, String value2) {
            addCriterion("identity_number between", value1, value2, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNumberNotBetween(String value1, String value2) {
            addCriterion("identity_number not between", value1, value2, "identityNumber");
            return (Criteria) this;
        }

        public Criteria andIdentityNameIsNull() {
            addCriterion("identity_name is null");
            return (Criteria) this;
        }

        public Criteria andIdentityNameIsNotNull() {
            addCriterion("identity_name is not null");
            return (Criteria) this;
        }

        public Criteria andIdentityNameEqualTo(String value) {
            addCriterion("identity_name =", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameNotEqualTo(String value) {
            addCriterion("identity_name <>", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameGreaterThan(String value) {
            addCriterion("identity_name >", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameGreaterThanOrEqualTo(String value) {
            addCriterion("identity_name >=", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameLessThan(String value) {
            addCriterion("identity_name <", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameLessThanOrEqualTo(String value) {
            addCriterion("identity_name <=", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityNameLike(String value) {
            addCriterion("identity_name like", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameNotLike(String value) {
            addCriterion("identity_name not like", value, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameIn(List<String> values) {
            addCriterion("identity_name in", values, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameNotIn(List<String> values) {
            addCriterion("identity_name not in", values, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameBetween(String value1, String value2) {
            addCriterion("identity_name between", value1, value2, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityNameNotBetween(String value1, String value2) {
            addCriterion("identity_name not between", value1, value2, "identityName");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdIsNull() {
            addCriterion("identity_card_front_id is null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdIsNotNull() {
            addCriterion("identity_card_front_id is not null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdEqualTo(Integer value) {
            addCriterion("identity_card_front_id =", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdNotEqualTo(Integer value) {
            addCriterion("identity_card_front_id <>", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdGreaterThan(Integer value) {
            addCriterion("identity_card_front_id >", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("identity_card_front_id >=", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdLessThan(Integer value) {
            addCriterion("identity_card_front_id <", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdLessThanOrEqualTo(Integer value) {
            addCriterion("identity_card_front_id <=", value, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_front_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdIn(List<Integer> values) {
            addCriterion("identity_card_front_id in", values, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdNotIn(List<Integer> values) {
            addCriterion("identity_card_front_id not in", values, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdBetween(Integer value1, Integer value2) {
            addCriterion("identity_card_front_id between", value1, value2, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardFrontIdNotBetween(Integer value1, Integer value2) {
            addCriterion("identity_card_front_id not between", value1, value2, "identityCardFrontId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdIsNull() {
            addCriterion("identity_card_reverse_id is null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdIsNotNull() {
            addCriterion("identity_card_reverse_id is not null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdEqualTo(Integer value) {
            addCriterion("identity_card_reverse_id =", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdNotEqualTo(Integer value) {
            addCriterion("identity_card_reverse_id <>", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdGreaterThan(Integer value) {
            addCriterion("identity_card_reverse_id >", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("identity_card_reverse_id >=", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdLessThan(Integer value) {
            addCriterion("identity_card_reverse_id <", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdLessThanOrEqualTo(Integer value) {
            addCriterion("identity_card_reverse_id <=", value, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("identity_card_reverse_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdIn(List<Integer> values) {
            addCriterion("identity_card_reverse_id in", values, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdNotIn(List<Integer> values) {
            addCriterion("identity_card_reverse_id not in", values, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdBetween(Integer value1, Integer value2) {
            addCriterion("identity_card_reverse_id between", value1, value2, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andIdentityCardReverseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("identity_card_reverse_id not between", value1, value2, "identityCardReverseId");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIsNull() {
            addCriterion("education_code is null");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIsNotNull() {
            addCriterion("education_code is not null");
            return (Criteria) this;
        }

        public Criteria andEducationCodeEqualTo(String value) {
            addCriterion("education_code =", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotEqualTo(String value) {
            addCriterion("education_code <>", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThan(String value) {
            addCriterion("education_code >", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThanOrEqualTo(String value) {
            addCriterion("education_code >=", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThan(String value) {
            addCriterion("education_code <", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThanOrEqualTo(String value) {
            addCriterion("education_code <=", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("education_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLike(String value) {
            addCriterion("education_code like", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotLike(String value) {
            addCriterion("education_code not like", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIn(List<String> values) {
            addCriterion("education_code in", values, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotIn(List<String> values) {
            addCriterion("education_code not in", values, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeBetween(String value1, String value2) {
            addCriterion("education_code between", value1, value2, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotBetween(String value1, String value2) {
            addCriterion("education_code not between", value1, value2, "educationCode");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualToColumn(Authentication.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table authentication
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table authentication
         *
         * @mbg.generated
         */
        private AuthenticationExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        protected Criteria(AuthenticationExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        public AuthenticationExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table authentication
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table authentication
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table authentication
         *
         * @mbg.generated
         */
        void example(com.tkj.wechat.domain.AuthenticationExample example);
    }
}